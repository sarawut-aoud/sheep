{"version":3,"file":"tf-backend-wasm.fesm.min.js","sources":["../../../../tfjs-backend-wasm/src/kernels/types.ts","../../../../tfjs-backend-wasm/src/kernels/_FusedMatMul.ts","../../../../tfjs-backend-wasm/src/kernels/unary_kernel.ts","../../../../tfjs-backend-wasm/src/kernels/Abs.ts","../../../../tfjs-backend-wasm/src/kernels/binary_kernel.ts","../../../../tfjs-backend-wasm/src/kernels/Add.ts","../../../../tfjs-backend-wasm/src/kernels/AddN.ts","../../../../tfjs-backend-wasm/src/kernels/Identity.ts","../../../../tfjs-backend-wasm/src/kernels/Transpose.ts","../../../../tfjs-backend-wasm/src/kernels/kernel_utils.ts","../../../../tfjs-backend-wasm/src/kernels/All.ts","../../../../tfjs-backend-wasm/src/kernels/Any.ts","../../../../tfjs-backend-wasm/src/kernels/ArgMax.ts","../../../../tfjs-backend-wasm/src/kernels/AvgPool.ts","../../../../tfjs-backend-wasm/src/kernels/Reshape.ts","../../../../tfjs-backend-wasm/src/kernels/BatchMatMul.ts","../../../../../tfjs-backend-cpu/src/kernels/Slice.ts","../../../../../tfjs-backend-cpu/src/kernels/RaggedTensorToTensor_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/StringNGrams_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/StringSplit_impl.ts","../../../../tfjs-backend-wasm/src/kernels/Slice.ts","../../../../tfjs-backend-wasm/src/kernels/BatchToSpaceND.ts","../../../../tfjs-backend-wasm/src/kernels/Cast.ts","../../../../tfjs-backend-wasm/src/kernels/Ceil.ts","../../../../tfjs-backend-wasm/src/kernels/ClipByValue.ts","../../../../tfjs-backend-wasm/src/kernels/Concat.ts","../../../../../tfjs-backend-cpu/src/kernels/Concat_impl.ts","../../../../tfjs-backend-wasm/src/kernels/Conv2D.ts","../../../../tfjs-backend-wasm/src/kernels/Conv2DBackpropInput.ts","../../../../tfjs-backend-wasm/src/kernels/Cos.ts","../../../../tfjs-backend-wasm/src/kernels/Cosh.ts","../../../../tfjs-backend-wasm/src/kernels/CropAndResize.ts","../../../../tfjs-backend-wasm/src/kernels/Cumprod.ts","../../../../tfjs-backend-wasm/src/kernels/Cumsum.ts","../../../../tfjs-backend-wasm/src/kernels/DepthToSpace.ts","../../../../tfjs-backend-wasm/src/kernels/DepthwiseConv2dNative.ts","../../../../tfjs-backend-wasm/src/kernels/Elu.ts","../../../../tfjs-backend-wasm/src/kernels/Equal.ts","../../../../tfjs-backend-wasm/src/kernels/Exp.ts","../../../../tfjs-backend-wasm/src/kernels/ExpandDims.ts","../../../../tfjs-backend-wasm/src/kernels/Fill.ts","../../../../tfjs-backend-wasm/src/kernels/FlipLeftRight.ts","../../../../tfjs-backend-wasm/src/kernels/Floor.ts","../../../../tfjs-backend-wasm/src/kernels/FloorDiv.ts","../../../../tfjs-backend-wasm/src/kernels/FusedBatchNorm.ts","../../../../tfjs-backend-wasm/src/kernels/FusedConv2D.ts","../../../../tfjs-backend-wasm/src/kernels/FusedDepthwiseConv2D.ts","../../../../tfjs-backend-wasm/src/kernels/GatherNd.ts","../../../../tfjs-backend-wasm/src/kernels/GatherV2.ts","../../../../tfjs-backend-wasm/src/kernels/Greater.ts","../../../../tfjs-backend-wasm/src/kernels/GreaterEqual.ts","../../../../tfjs-backend-wasm/src/kernels/IsNan.ts","../../../../tfjs-backend-wasm/src/kernels/LeakyRelu.ts","../../../../tfjs-backend-wasm/src/kernels/Less.ts","../../../../tfjs-backend-wasm/src/kernels/LessEqual.ts","../../../../tfjs-backend-wasm/src/kernels/Log.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalAnd.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalNot.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalOr.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalXor.ts","../../../../tfjs-backend-wasm/src/kernels/Max.ts","../../../../tfjs-backend-wasm/src/kernels/Maximum.ts","../../../../tfjs-backend-wasm/src/kernels/MaxPool.ts","../../../../tfjs-backend-wasm/src/kernels/Mean.ts","../../../../tfjs-backend-wasm/src/kernels/Min.ts","../../../../tfjs-backend-wasm/src/kernels/Minimum.ts","../../../../tfjs-backend-wasm/src/kernels/MirrorPad.ts","../../../../tfjs-backend-wasm/src/kernels/Multiply.ts","../../../../tfjs-backend-wasm/src/kernels/Neg.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppression_util.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV3.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV4.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV5.ts","../../../../tfjs-backend-wasm/src/kernels/NotEqual.ts","../../../../tfjs-backend-wasm/src/kernels/OneHot.ts","../../../../tfjs-backend-wasm/src/kernels/OnesLike.ts","../../../../tfjs-backend-wasm/src/kernels/Pack.ts","../../../../tfjs-backend-wasm/src/kernels/PadV2.ts","../../../../tfjs-backend-wasm/src/kernels/Pow.ts","../../../../tfjs-backend-wasm/src/kernels/Prelu.ts","../../../../tfjs-backend-wasm/src/kernels/Prod.ts","../../../../tfjs-backend-wasm/src/kernels/Range.ts","../../../../../tfjs-backend-cpu/src/kernels/Range_impl.ts","../../../../tfjs-backend-wasm/src/kernels/RealDiv.ts","../../../../tfjs-backend-wasm/src/kernels/Reciprocal.ts","../../../../tfjs-backend-wasm/src/kernels/Relu.ts","../../../../tfjs-backend-wasm/src/kernels/Relu6.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeBilinear.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeNearestNeighbor.ts","../../../../tfjs-backend-wasm/src/kernels/Reverse.ts","../../../../tfjs-backend-wasm/src/kernels/RotateWithOffset.ts","../../../../tfjs-backend-wasm/src/kernels/Round.ts","../../../../tfjs-backend-wasm/src/kernels/Rsqrt.ts","../../../../tfjs-backend-wasm/src/kernels/ScatterNd.ts","../../../../tfjs-backend-wasm/src/kernels/Select.ts","../../../../tfjs-backend-wasm/src/kernels/Sigmoid.ts","../../../../tfjs-backend-wasm/src/kernels/Sin.ts","../../../../tfjs-backend-wasm/src/kernels/Softmax.ts","../../../../tfjs-backend-wasm/src/kernels/SpaceToBatchND.ts","../../../../tfjs-backend-wasm/src/kernels/SparseFillEmptyRows.ts","../../../../tfjs-backend-wasm/src/kernels/SparseReshape.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentReduction.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentMean.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentSum.ts","../../../../tfjs-backend-wasm/src/kernels/SplitV.ts","../../../../tfjs-backend-wasm/src/kernels/Sqrt.ts","../../../../tfjs-backend-wasm/src/kernels/Square.ts","../../../../tfjs-backend-wasm/src/kernels/SquaredDifference.ts","../../../../tfjs-backend-wasm/src/kernels/Step.ts","../../../../tfjs-backend-wasm/src/kernels/StridedSlice.ts","../../../../tfjs-backend-wasm/src/kernels/StringNGrams.ts","../../../../tfjs-backend-wasm/src/kernels/StringSplit.ts","../../../../tfjs-backend-wasm/src/kernels/StringToHashBucketFast.ts","../../../../../tfjs-backend-cpu/src/kernels/StringToHashBucketFast_impl.ts","../../../../tfjs-backend-wasm/src/kernels/Sub.ts","../../../../tfjs-backend-wasm/src/kernels/Sum.ts","../../../../tfjs-backend-wasm/src/kernels/Tan.ts","../../../../tfjs-backend-wasm/src/kernels/Tanh.ts","../../../../tfjs-backend-wasm/src/kernels/Tile.ts","../../../../tfjs-backend-wasm/src/kernels/TopK.ts","../../../../tfjs-backend-wasm/src/kernels/Transform.ts","../../../../tfjs-backend-wasm/src/kernels/ZerosLike.ts","../../../../tfjs-backend-wasm/src/register_all_kernels.ts","../../../../tfjs-backend-wasm/src/kernels/Unpack.ts","../../../../tfjs-backend-wasm/src/flags_wasm.ts","wasm-out/tfjs-backend-wasm-threaded-simd.js","wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","wasm-out/tfjs-backend-wasm.js","../../../../tfjs-backend-wasm/src/backend_wasm.ts","../../../../tfjs-backend-wasm/src/version.ts","../../../../tfjs-backend-wasm/src/base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4,\n  sigmoid = 5,\n  elu = 6\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, broadcast_util, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n\n  const out = backend.makeOutput([...batchDims, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const _fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createUnaryKernelConfig(\n    kernelName: string, outType?: DataType): KernelConfig {\n  let wasmFunc: (xId: number, dtype: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    kernelFunc();\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc, tensor} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n\n  if (x.dtype === 'string') {\n    return tensor(backend.readSync(x.dataId), x.shape, x.dtype);\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as unknown as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\n\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\n\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {backend, inputs, attrs} = args;\n  const {axis} = attrs as unknown as ArgMaxAttrs;\n  const {x} = inputs as unknown as ArgMaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const outShape = input.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = input.shape[axes[0]];\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  return out;\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'wasm',\n  kernelFunc: argmax as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, broadcast_util, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, buffer, DataType, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function sliceImpl(\n    vals: BackendValues, begin: number[], size: number[], shape: number[],\n    dtype: DataType): BackendValues {\n  const isContinous = slice_util.isSliceContinous(shape, begin, size);\n  const length = util.sizeFromShape(size);\n  const xStrides = util.computeStrides(shape);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n\n    if (dtype === 'string') {\n      return (vals as Uint8Array[]).slice(flatOffset, flatOffset + length);\n    }\n\n    return (vals as TypedArray).subarray(flatOffset, flatOffset + length);\n  }\n\n  const decodedData = dtype === 'string' ?\n      backend_util.fromUint8ToStringArray(vals as Uint8Array[]) :\n      vals as TypedArray;\n\n  const inBuf = buffer(shape, dtype, decodedData);\n  const outBuf = buffer(size, dtype);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const outLoc = outBuf.indexToLoc(i);\n    const inLoc = outLoc.map((idx: number, j) => idx + begin[j]);\n    outBuf.set(inBuf.get(...inLoc), ...outLoc);\n  }\n\n  if (dtype === 'string') {\n    return backend_util.fromStringArrayToUint8(outBuf.values as string[]);\n  }\n  return outBuf.values as TypedArray;\n}\n\nexport function slice(\n    args: {inputs: SliceInputs, backend: MathBackendCPU, attrs: SliceAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {begin, size} = attrs;\n\n  assertNotComplex(x, 'slice');\n\n  const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n  slice_util.assertParamsValid(x, $begin, $size);\n\n  const vals = backend.data.get(x.dataId).values;\n  const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n  return backend.makeTensorInfo($size, x.dtype, outVals);\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'cpu',\n  kernelFunc: slice as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, broadcastTo, DataType, reshape, tidy, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport RowPartitionType = backend_util.RowPartitionType;\n// Based on\n// https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc\nclass RaggedTensorToTensorOp {\n  private readonly rowPartitionTypes: RowPartitionType[];\n  private readonly raggedRank: number;\n  constructor(\n      private shape: TypedArray, private shapeShape: number[],\n      private values: TypedArray, private valuesShape: number[],\n      private valuesDType: DataType, private defaultValue: TypedArray,\n      private defaultValueShape: number[],\n      private readonly rowPartitionValues: TypedArray[],\n      private readonly rowPartitionValuesShapes: number[][],\n      rowPartitionTypeStrings: string[]) {\n    this.rowPartitionTypes =\n        backend_util.getRowPartitionTypesHelper(rowPartitionTypeStrings);\n    this.raggedRank = backend_util.getRaggedRank(this.rowPartitionTypes);\n  }\n\n  private getRowPartitionTypeByDimension(dimension: number) {\n    if (this.rowPartitionTypes[0] === RowPartitionType.FIRST_DIM_SIZE) {\n      return this.rowPartitionTypes[dimension + 1];\n    } else {\n      return this.rowPartitionTypes[dimension];\n    }\n  }\n\n  // Returns the relationship between dimension and dimension + 1.\n  private getRowPartitionTensor(dimension: number) {\n    if (this.rowPartitionTypes[0] === RowPartitionType.FIRST_DIM_SIZE) {\n      return this.rowPartitionValues[dimension + 1];\n    } else {\n      return this.rowPartitionValues[dimension];\n    }\n  }\n\n  private getMaxWidth(dimension: number) {\n    const rowPartitionTensor = this.getRowPartitionTensor(dimension - 1);\n    switch (this.getRowPartitionTypeByDimension(dimension - 1)) {\n      case RowPartitionType.VALUE_ROWIDS:\n        return RaggedTensorToTensorOp.getMaxWidthValueRowID(rowPartitionTensor);\n      case RowPartitionType.ROW_SPLITS:\n        return RaggedTensorToTensorOp.getMaxWidthRowSplit(rowPartitionTensor);\n      default:\n        throw new Error(`Cannot handle partition type ${\n            RowPartitionType[this.getRowPartitionTypeByDimension(\n                dimension - 1)]}`);\n    }\n  }\n\n  static getMaxWidthRowSplit(rowSplit: TypedArray) {\n    const tensorLength = rowSplit.length;\n    if (tensorLength === 0 || tensorLength === 1) {\n      return 0;\n    }\n    let maxWidth = 0;\n    for (let i = 0; i < tensorLength - 1; ++i) {\n      const currentWidth = rowSplit[i + 1] - rowSplit[i];\n      if (currentWidth > maxWidth) {\n        maxWidth = currentWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  static getMaxWidthValueRowID(valueRowIds: TypedArray) {\n    const indexLength = valueRowIds.length;\n    if (indexLength === 0) {\n      return 0;\n    }\n    let firstEqualIndex = 0;\n    let firstEqualIndexValue = valueRowIds[0];\n    let maxWidth = 0;\n    for (let i = 1; i < indexLength; ++i) {\n      const value = valueRowIds[i];\n      if (value !== firstEqualIndexValue) {\n        firstEqualIndexValue = value;\n        maxWidth = Math.max(i - firstEqualIndex, maxWidth);\n        firstEqualIndex = i;\n      }\n    }\n    return Math.max(indexLength - firstEqualIndex, maxWidth);\n  }\n\n  private tensorShapeFromTensor(\n      t: TypedArray, tShape: number[], isPartial = true) {\n    if (tShape.length === 0) {\n      if (t[0] === -1) {\n        return [];\n      }\n      throw new Error(\n          `The only valid scalar shape tensor is the fully unknown shape specified as -1.`);\n    }\n    // MakePartialShape/MakeShapeHelper.\n    return makeShape(t, isPartial);\n  }\n\n  private calculateOutputSize(firstDim: number) {\n    const valueShape = this.valuesShape;\n    const defaultValueShape = this.defaultValueShape;\n\n    backend_util.validateDefaultValueShape(defaultValueShape, valueShape);\n\n    const shape = this.tensorShapeFromTensor(this.shape, this.shapeShape);\n    const outputShape = backend_util.combineRaggedTensorToTensorShapes(\n        this.raggedRank, shape, valueShape);\n\n    const result = outputShape;\n\n    if (result[0] < 0) {\n      result[0] = firstDim;\n    }\n    for (let i = 1; i <= this.raggedRank; ++i) {\n      if (result[i] < 0) {\n        result[i] = this.getMaxWidth(i);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * The outputIndex represents the index in the output tensor\n   * where the first element of a particular dimension would be written.\n   * If it is -1, it indicates that the index is out of scope.\n   * Example, given firstDimension = 10, firstDimensionOutput = 6,\n   * and outputIndexMultiplier = 100:\n   * result = [0 100 200 300 400 500 -1 -1 -1 -1]\n   * If firstDimensionOutput = 11 instead, then:\n   * result = [0 100 200 300 400 500 600 700 800 900]\n   */\n  private calculateFirstParentOutputIndex(\n      firstDimension: number, outputIndexMultiplier: number,\n      firstDimensionOutput: number) {\n    const minDimension = Math.min(firstDimension, firstDimensionOutput);\n    const result: number[] = [];\n    let currentOutputIndex = 0;\n    for (let i = 0; i < minDimension;\n         ++i, currentOutputIndex += outputIndexMultiplier) {\n      result.push(currentOutputIndex);\n    }\n    for (let i = minDimension; i < firstDimension; ++i) {\n      result.push(-1);\n    }\n    util.assert(\n        result.length === firstDimension,\n        () => 'Final length of result must be equal to firstDimension.');\n\n    return result;\n  }\n\n  private calculateOutputIndexRowSplit(\n      rowSplit: TypedArray, parentOutputIndex: number[],\n      outputIndexMultiplier: number, outputSize: number) {\n    const rowSplitSize = rowSplit.length;\n    const result: number[] = [];\n    for (let i = 0; i < rowSplitSize - 1; ++i) {\n      const rowLength = rowSplit[i + 1] - rowSplit[i];\n      let realLength = Math.min(outputSize, rowLength);\n      let parentOutputIndexCurrent = parentOutputIndex[i];\n\n      if (parentOutputIndexCurrent === -1) {\n        realLength = 0;\n      }\n      for (let j = 0; j < realLength; ++j) {\n        result.push(parentOutputIndexCurrent);\n        parentOutputIndexCurrent += outputIndexMultiplier;\n      }\n      for (let j = 0; j < rowLength - realLength; ++j) {\n        result.push(-1);\n      }\n    }\n    if (rowSplitSize > 0 && result.length !== rowSplit[rowSplitSize - 1]) {\n      throw new Error('Invalid row split size.');\n    }\n\n    return result;\n  }\n\n  // Calculate the output index of the first element of a list.\n  // The parentOutputIndex is the same computation for the previous list.\n  // -1 indicates an element or list that is out of range.\n  // The outputIndexMultiplier is the number of output indices one moves\n  // forward for each column.\n  // E.g., given:\n  // valueRowIds:[0 1 2 2 2 3 5 5 6]\n  // parentOutputIndex:[1000 1100 2000 2100 -1 3000 4000]\n  // outputIndexMultiplier: 10\n  // outputSize: 2\n  // You get:\n  // result = [1000 1100 2000 2010 -1 2100 -1 -1 3000]\n  // result[0] = parentOutputIndex[valueRowIds[0]]\n  // result[1] = parentOutputIndex[valueRowIds[1]]\n  // result[2] = parentOutputIndex[valueRowIds[2]]\n  // result[3] = parentOutputIndex[valueRowIds[2] + 10]\n  // result[4] = -1 because it is the third element the size is 2.\n  // result[5] = parentOutputIndex[valueRowIds[3]]\n  // result[6] = -1 because parentOutputIndex[valueRowIds[6]] == -1\n  // result[7] = -1 because parentOutputIndex[valueRowIds[6]] == -1\n  // result[8] = parentOutputIndex[valueRowIds[7]]\n  private calculateOutputIndexValueRowID(\n      valueRowIds: TypedArray, parentOutputIndex: number[],\n      outputIndexMultiplier: number, outputSize: number) {\n    const indexSize = valueRowIds.length;\n    const result: number[] = [];\n    if (indexSize === 0) {\n      return [];\n    }\n\n    let currentOutputColumn = 0;\n    let currentValueRowId = valueRowIds[0];\n\n    if (currentValueRowId >= parentOutputIndex.length) {\n      throw new Error(\n          `Got currentValueRowId=${currentValueRowId}, which is not less than ${\n              parentOutputIndex.length}`);\n    }\n\n    let currentOutputIndex = parentOutputIndex[currentValueRowId];\n    result.push(currentOutputIndex);\n    for (let i = 1; i < indexSize; ++i) {\n      const nextValueRowId = valueRowIds[i];\n      if (nextValueRowId === currentValueRowId) {\n        if (currentOutputIndex >= 0) {\n          ++currentOutputColumn;\n          if (currentOutputColumn < outputSize) {\n            currentOutputIndex += outputIndexMultiplier;\n          } else {\n            currentOutputIndex = -1;\n          }\n        }\n      } else {\n        currentOutputColumn = 0;\n        currentValueRowId = nextValueRowId;\n\n        if (nextValueRowId >= parentOutputIndex.length) {\n          throw new Error(\n              `Got nextValueRowId=${nextValueRowId} which is not less than ${\n                  parentOutputIndex.length}`);\n        }\n\n        currentOutputIndex = parentOutputIndex[nextValueRowId];\n      }\n      result.push(currentOutputIndex);\n    }\n\n    if (result.length !== valueRowIds.length) {\n      throw new Error('Invalid row ids.');\n    }\n\n    return result;\n  }\n\n  private calculateOutputIndex(\n      dimension: number, parentOutputIndex: number[],\n      outputIndexMultiplier: number, outputSize: number) {\n    const rowPartitionTensor = this.getRowPartitionTensor(dimension);\n    const partitionType = this.getRowPartitionTypeByDimension(dimension);\n    switch (partitionType) {\n      case RowPartitionType.VALUE_ROWIDS:\n        return this.calculateOutputIndexValueRowID(\n            rowPartitionTensor, parentOutputIndex, outputIndexMultiplier,\n            outputSize);\n      case RowPartitionType.ROW_SPLITS:\n        if (rowPartitionTensor.length - 1 > parentOutputIndex.length) {\n          throw new Error(`Row partition size is greater than output size: ${\n              rowPartitionTensor.length - 1} > ${parentOutputIndex.length}`);\n        }\n        return this.calculateOutputIndexRowSplit(\n            rowPartitionTensor, parentOutputIndex, outputIndexMultiplier,\n            outputSize);\n      default:\n        throw new Error(\n            `Unsupported partition type: ${RowPartitionType[partitionType]}`);\n    }\n  }\n\n  private getFirstDimensionSize() {\n    const firstPartitionTensor = this.rowPartitionValues[0];\n    if (this.rowPartitionTypes.length === 0) {\n      throw new Error('No row_partition_types given.');\n    }\n    const firstPartitionType = this.rowPartitionTypes[0];\n    switch (firstPartitionType) {\n      case RowPartitionType.FIRST_DIM_SIZE:\n        return firstPartitionTensor[0];\n      case RowPartitionType.VALUE_ROWIDS:\n        throw new Error('Cannot handle VALUE_ROWIDS in first dimension.');\n      case RowPartitionType.ROW_SPLITS:\n        return this.rowPartitionValuesShapes[0][0] - 1;\n      default:\n        throw new Error(\n            `Cannot handle type ${RowPartitionType[firstPartitionType]}`);\n    }\n  }\n\n  compute(): [number[], TypedArray] {\n    const firstPartitionTensor = this.rowPartitionValues[0];\n    if (firstPartitionTensor.length <= 0) {\n      throw new Error(\n          'Invalid first partition input. ' +\n          'Tensor requires at least one element.');\n    }\n    const firstDimension = this.getFirstDimensionSize();\n    const outputSize = this.calculateOutputSize(firstDimension);\n    const multiplier: number[] = new Array(this.raggedRank + 1);\n\n    multiplier[multiplier.length - 1] = 1;\n    for (let i = multiplier.length - 2; i >= 0; --i) {\n      multiplier[i] = multiplier[i + 1] * outputSize[i + 1];\n    }\n    // Full size of the tensor.\n    const outputShape: number[] = makeShape(outputSize, false);\n    const outputTensor =\n        util.getArrayFromDType(\n            this.valuesDType, util.sizeFromShape(outputShape)) as TypedArray;\n\n    const fullSize = multiplier[0] * outputSize[0];\n    if (fullSize > 0) {\n      let outputIndex = this.calculateFirstParentOutputIndex(\n          firstDimension, multiplier[0], outputSize[0]);\n      for (let i = 1; i <= this.raggedRank; ++i) {\n        const newOutputIndex = this.calculateOutputIndex(\n            i - 1, outputIndex, multiplier[i], outputSize[i]);\n        outputIndex = newOutputIndex;\n      }\n\n      this.setOutput(this.raggedRank, outputIndex, outputTensor, outputShape);\n    }\n\n    return [outputShape, outputTensor];\n  }\n  setOutput(\n      raggedRank: number, outputIndex: number[], outputTensor: TypedArray,\n      outputShape: number[]) {\n    if (outputTensor.length === 0) {\n      return;\n    }\n\n    const valuesBase = this.values;\n    const outputBase = outputTensor;\n\n    let elementShape = outputShape.slice();\n    elementShape = elementShape.slice(raggedRank + 1);\n    const valueElementSize = util.sizeFromShape(elementShape);\n    const outputIndexSize = outputIndex.length;\n\n    // Broadcast the default value to value_element_size.  (We can skip this\n    // if defaultValueTensor.size == 1, since we use fill when that's true.)\n    let defaultValue = this.defaultValue;\n    if (defaultValue.length !== valueElementSize && defaultValue.length !== 1) {\n      const srcShape = this.defaultValueShape;\n      tidy(() => {\n        const defaultValueTensor = reshape(defaultValue, srcShape);\n        const bCastDefault = broadcastTo(defaultValueTensor, elementShape);\n        defaultValue = bCastDefault.dataSync();\n      });\n    }\n\n    // Loop through the outputIndex array, finding contiguous regions that\n    // should be copied.  Once we find the end of a contiguous region, copy it\n    // and add any necessary padding (with defaultValue).\n    let srcStart = 0;  // Start of contiguous region (in values)\n    let dstStart = 0;  // Destination for contiguous region (in output)\n    let dstEnd = 0;    // Destination for contiguous region (in output)\n    for (let srcI = 0; srcI <= outputIndexSize; ++srcI) {\n      // dstI is the destination where the value at srcI should be copied.\n      let dstI = srcI < outputIndexSize ? outputIndex[srcI] : -1;\n\n      // If we're still in a contiguous region, then update dstEnd go to the\n      // next srcI.\n      if (dstI === dstEnd) {\n        ++dstEnd;\n        continue;\n      }\n\n      // We found the end of contiguous region.  This can be because we found\n      // a gap (dstI > dstEnd), or a source value that shouldn't be copied\n      // because it's out-of-bounds (dstI == -1), or the end of the tensor\n      // (dstI === -1).\n      if (dstStart < dstEnd) {\n        // Copy the contiguous region.\n        const src = valuesBase.subarray(srcStart * valueElementSize);\n        const dst = outputBase.subarray(dstStart * valueElementSize);\n        const nVals = (dstEnd - dstStart) * valueElementSize;\n        copyArray(dst, src, nVals);\n      }\n\n      // Add any necessary padding (w/ defaultValue).\n      if (srcI >= outputIndexSize) {\n        // We reached the end of values: pad to the end of output.\n        const outputSize = outputTensor.length;\n        dstI = Math.floor(outputSize / valueElementSize);\n      }\n      if (dstI > dstEnd) {\n        if (this.defaultValue.length === 1) {\n          outputBase\n              .subarray(dstEnd * valueElementSize, dstI * valueElementSize)\n              .fill(this.defaultValue[0]);\n          dstEnd = dstI;\n        } else {\n          while (dstI > dstEnd) {\n            const dst = outputBase.slice(dstEnd * valueElementSize);\n            copyArray(dst, defaultValue, valueElementSize);\n            ++dstEnd;\n          }\n        }\n      }\n\n      // Update indices.\n      if (dstI < 0) {\n        // srcI should be skipped -- leave it out of the contiguous region.\n        srcStart = srcI + 1;\n        dstStart = dstEnd;\n      } else {\n        // srcI should be copied -- include it in the contiguous region.\n        srcStart = srcI;\n        dstStart = dstEnd;\n        dstEnd = dstStart + 1;\n      }\n    }\n  }\n}\n\nfunction copyArray(dst: TypedArray, src: TypedArray, size: number) {\n  for (let i = 0; i < size; i++) {\n    dst[i] = src[i];\n  }\n}\n\nfunction makeShape(shape: number[]|TypedArray, isPartial: boolean) {\n  const out: number[] = [];\n  for (let dim of shape) {\n    if (dim < 0) {\n      if (!isPartial) {\n        throw new Error(`Dimension ${dim} must be >= 0`);\n      }\n      if (dim < -1) {\n        throw new Error(`Dimension ${dim} must be >= -1`);\n      }\n      dim = -1;\n    }\n    out.push(dim);\n  }\n\n  return out;\n}\n\nexport function raggedTensorToTensorImpl(\n    shape: TypedArray, shapesShape: number[], values: TypedArray,\n    valuesShape: number[], valuesDType: DataType, defaultValue: TypedArray,\n    defaultValueShape: number[], rowPartitionValues: TypedArray[],\n    rowPartitionValuesShapes: number[][],\n    rowPartitionTypes: string[]): [number[], TypedArray] {\n  return new RaggedTensorToTensorOp(\n             shape, shapesShape, values, valuesShape, valuesDType, defaultValue,\n             defaultValueShape, rowPartitionValues, rowPartitionValuesShapes,\n             rowPartitionTypes)\n      .compute();\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {util} from '@tensorflow/tfjs-core';\n\n/**\n * The StringNGramsOp class creates ngrams from ragged string data.\n * The constructor contains all attributes related to the operation such as\n * padding widths and strings, and the compute function can be used to\n * compute the ngrams for different ragged tensor inputs.\n */\nclass StringNGramsOp {\n  private separator: Uint8Array;\n  private nGramWidths: number[];\n  private padWidth: number;\n  private leftPad: Uint8Array;\n  private rightPad: Uint8Array;\n  private preserveShort: boolean;\n\n  constructor(\n      separator: string, nGramWidths: number[], leftPad: string,\n      rightPad: string, padWidth: number, preserveShortSequences: boolean) {\n    this.separator = util.encodeString(separator);\n    this.nGramWidths = nGramWidths;\n    this.leftPad = util.encodeString(leftPad);\n    this.rightPad = util.encodeString(rightPad);\n    this.padWidth = padWidth;\n    this.preserveShort = preserveShortSequences;\n  }\n\n  private getPadWidth(nGramWidth: number) {\n    // Ngrams can be padded with either a fixed pad width or a dynamic pad\n    // width depending on the 'padWidth' arg, but in no case should the padding\n    // ever be wider than 'nGramWidth' - 1.\n    return Math.min(\n        this.padWidth < 0 ? nGramWidth - 1 : this.padWidth, nGramWidth - 1);\n  }\n\n  private getNumNGrams(length: number, nGramWidth: number) {\n    const padWidth = this.getPadWidth(nGramWidth);\n    return Math.max(0, ((length + 2 * padWidth) - nGramWidth) + 1);\n  }\n\n  private createNGrams(\n      data: Uint8Array[], splitIndex: number, output: Uint8Array[],\n      outputStartIndex: number, numNGrams: number, nGramWidth: number) {\n    for (let nGramIndex = 0; nGramIndex < numNGrams; ++nGramIndex) {\n      const padWidth = this.getPadWidth(nGramWidth);\n      const leftPadding = Math.max(0, padWidth - nGramIndex);\n      const rightPadding =\n          Math.max(0, padWidth - (numNGrams - (nGramIndex + 1)));\n      const numTokens = nGramWidth - (leftPadding + rightPadding);\n      const dataStartIndex =\n          splitIndex + (leftPadding > 0 ? 0 : nGramIndex - padWidth);\n\n      // Calculate the total expected size of the nGram so we can reserve the\n      // correct amount of space in the string.\n      let nGramSize = 0;\n      // Size of the left padding.\n      nGramSize += leftPadding * this.leftPad.length;\n      // Size of the tokens.\n      for (let n = 0; n < numTokens; ++n) {\n        nGramSize += data[dataStartIndex + n].length;\n      }\n      // Size of the right padding.\n      nGramSize += rightPadding * this.rightPad.length;\n      // Size of the separators.\n      const numSeparators = leftPadding + rightPadding + numTokens - 1;\n      nGramSize += numSeparators * this.separator.length;\n\n      // Build the nGram.\n      output[outputStartIndex + nGramIndex] = new Uint8Array(nGramSize);\n      const nGram = output[outputStartIndex + nGramIndex];\n\n      let nextNGramIndex = 0;\n      const appendToNGram = (str: Uint8Array) =>\n          str.forEach((value) => nGram[nextNGramIndex++] = value);\n\n      for (let n = 0; n < leftPadding; ++n) {\n        appendToNGram(this.leftPad);\n        appendToNGram(this.separator);\n      }\n      // Only output first numTokens - 1 pairs of data and separator\n      for (let n = 0; n < numTokens - 1; ++n) {\n        appendToNGram(data[dataStartIndex + n]);\n        appendToNGram(this.separator);\n      }\n      // Handle case when there are no tokens or no right padding as these\n      // can result in consecutive separators.\n      if (numTokens > 0) {\n        // If we have tokens, then output last and then pair each separator\n        // with the right padding that follows, to ensure nGram ends either with\n        // the token or with the right pad.\n        appendToNGram(data[dataStartIndex + numTokens - 1]);\n        for (let n = 0; n < rightPadding; ++n) {\n          appendToNGram(this.separator);\n          appendToNGram(this.rightPad);\n        }\n      } else {\n        // If we don't have tokens, then the last item inserted into the nGram\n        // has been the separator from the left padding loop above. Hence,\n        // output right pad and separator and make sure to finish with a\n        // padding, not a separator.\n        for (let n = 0; n < rightPadding - 1; ++n) {\n          appendToNGram(this.rightPad);\n          appendToNGram(this.separator);\n        }\n        appendToNGram(this.rightPad);\n      }\n    }\n  }\n\n  // Data and splits together form the definition of the ragged tensor,\n  // where data is 1 dimensional and contains the values of the tensor\n  // and splits denotes the indices at which each row starts.\n  public compute(data: Uint8Array[], splits: Int32Array):\n      [Uint8Array[], Int32Array] {\n    // Validate that the splits are valid indices into data, only if there are\n    // splits specified.\n    const inputDataSize = data.length;\n    const splitsSize = splits.length;\n    if (splitsSize > 0) {\n      let prevSplit = splits[0];\n      if (prevSplit !== 0) {\n        throw new Error(`First split value must be 0, got ${prevSplit}`);\n      }\n      for (let i = 1; i < splitsSize; ++i) {\n        let validSplits = splits[i] >= prevSplit;\n        validSplits = validSplits && (splits[i] <= inputDataSize);\n        if (!validSplits) {\n          throw new Error(`Invalid split value ${splits[i]}, must be in [${\n              prevSplit}, ${inputDataSize}]`);\n        }\n        prevSplit = splits[i];\n      }\n      if (prevSplit !== inputDataSize) {\n        throw new Error(`Last split value must be data size. Expected ${\n            inputDataSize}, got ${prevSplit}`);\n      }\n    }\n\n    const numBatchItems = splitsSize - 1;\n    const nGramsSplits = util.getArrayFromDType('int32', splitsSize);\n    // If there is no data or size, return an empty ragged tensor.\n    if (inputDataSize === 0 || splitsSize === 0) {\n      const empty: Uint8Array[] = new Array(inputDataSize);\n      for (let i = 0; i <= numBatchItems; ++i) {\n        nGramsSplits[i] = 0;\n      }\n      return [empty, nGramsSplits];\n    }\n\n    nGramsSplits[0] = 0;\n    for (let i = 1; i <= numBatchItems; ++i) {\n      const length = splits[i] - splits[i - 1];\n      let numNGrams = 0;\n      this.nGramWidths.forEach((nGramWidth) => {\n        numNGrams += this.getNumNGrams(length, nGramWidth);\n      });\n      if (this.preserveShort && length > 0 && numNGrams === 0) {\n        numNGrams = 1;\n      }\n      nGramsSplits[i] = nGramsSplits[i - 1] + numNGrams;\n    }\n\n    const nGrams: Uint8Array[] = new Array(nGramsSplits[numBatchItems]);\n\n    for (let i = 0; i < numBatchItems; ++i) {\n      const splitIndex = splits[i];\n      let outputStartIdx = nGramsSplits[i];\n      this.nGramWidths.forEach((nGramWidth) => {\n        const length = splits[i + 1] - splits[i];\n        const numNGrams = this.getNumNGrams(length, nGramWidth);\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n        outputStartIdx += numNGrams;\n      });\n      // If we're preserving short sequences, check to see if no sequence was\n      // generated by comparing the current output start idx to the original\n      // one (nGramSplitsdata). If no ngrams were generated, then they will\n      // be equal (since we increment outputStartIdx by numNGrams every\n      // time we create a set of ngrams.)\n      if (this.preserveShort && outputStartIdx === nGramsSplits[i]) {\n        const dataLength = splits[i + 1] - splits[i];\n        // One legitimate reason to not have any ngrams when this.preserveShort\n        // is true is if the sequence itself is empty. In that case, move on.\n        if (dataLength === 0) {\n          continue;\n        }\n        // We don't have to worry about dynamic padding sizes here: if padding\n        // was dynamic, every sequence would have had sufficient padding to\n        // generate at least one nGram.\n        const nGramWidth = dataLength + 2 * this.padWidth;\n        const numNGrams = 1;\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n      }\n    }\n    return [nGrams, nGramsSplits];\n  }\n}\n\nexport function stringNGramsImpl(\n    data: Uint8Array[], dataSplits: Int32Array, separator: string,\n    nGramWidths: number[], leftPad: string, rightPad: string, padWidth: number,\n    preserveShortSequences: boolean): [Uint8Array[], Int32Array] {\n  return new StringNGramsOp(\n             separator, nGramWidths, leftPad, rightPad, padWidth,\n             preserveShortSequences)\n      .compute(data, dataSplits);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nfunction split(\n    str: Uint8Array, delimiters: Uint8Array, skipEmpty: boolean,\n    result: Uint8Array[]): void {\n  if (!str.length) {\n    return;\n  }\n  // When the delimiter is empty, the input is split into individual characters.\n  if (delimiters.length === 0) {\n    for (let i = 0; i < str.length; ++i) {\n      result.push(str.subarray(i, i + 1));\n    }\n    return;\n  }\n  // When there is one delimiter, the input is split only at that delimiter.\n  if (delimiters.length === 1) {\n    const delimiter = delimiters[0];\n    let f = str.indexOf(delimiter);\n    while (f !== -1) {\n      const token = str.subarray(0, f);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      str = str.subarray(f + 1);\n      f = str.indexOf(delimiter);\n    }\n    if (!skipEmpty || str.length !== 0) {\n      result.push(str);\n    }\n    return;\n  }\n  // When there are multiple delimiters, the input is split at every instance\n  // one of the delimiters appears.\n  let tokenStart = 0;\n  for (let i = 0; i < str.length + 1; i++) {\n    if ((i === str.length) || (delimiters.indexOf(str[i]) !== -1)) {\n      const token = str.subarray(tokenStart, i);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      tokenStart = i + 1;\n    }\n  }\n}\n\nexport function stringSplitImpl(\n    input: Uint8Array[], delimiter: Uint8Array,\n    skipEmpty: boolean): [TypedArray, Uint8Array[], [number, number]] {\n  const batchSize = input.length;\n\n  // Empty delimiter means split the input character by character.\n  const tokens: Uint8Array[] = [];\n\n  let outputSize = 0;\n  let maxNumEntries = 0;\n  const numIndices: number[] = new Array(batchSize);\n  for (let i = 0; i < batchSize; ++i) {\n    const prevTokensLength = tokens.length;\n    split(input[i], delimiter, skipEmpty, tokens);\n    const nEntries = tokens.length - prevTokensLength;\n    numIndices[i] = nEntries;\n    outputSize += nEntries;\n    maxNumEntries = Math.max(maxNumEntries, nEntries);\n  }\n\n  const indices = util.getArrayFromDType('int32', outputSize * 2) as TypedArray;\n  const values: Uint8Array[] = new Array(outputSize);\n  const shape: [number, number] = [batchSize, maxNumEntries];\n\n  let c = 0;\n  for (let i = 0; i < batchSize; ++i) {\n    for (let j = 0; j < numIndices[i]; ++j) {\n      // indices is a 2d tensor with shape of [outputSize, 2]\n      indices[c * 2] = i;\n      indices[c * 2 + 1] = j;\n      values[c] = tokens[c];\n      ++c;\n    }\n  }\n\n  return [indices, values, shape];\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {transpose} from './Transpose';\n\nfunction batchToSpaceND(args: {\n  inputs: BatchToSpaceNDInputs,\n  backend: BackendWasm,\n  attrs: BatchToSpaceNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, crops} = attrs;\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted =\n      backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords =\n      backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize =\n      backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n  const xReshaped = reshape({inputs: {x}, backend, attrs: {shape: reshaped}});\n  const xTransposed =\n      transpose({inputs: {x: xReshaped}, backend, attrs: {perm: permuted}});\n  const xTransposedReshaped = reshape(\n      {inputs: {x: xTransposed}, backend, attrs: {shape: reshapedPermuted}});\n  const result = slice({\n    inputs: {x: xTransposedReshaped},\n    backend,\n    attrs: {begin: sliceBeginCoords, size: sliceSize}\n  });\n\n  backend.disposeData(xReshaped.dataId);\n  backend.disposeData(xTransposed.dataId);\n  backend.disposeData(xReshaped.dataId);\n\n  return result;\n}\n\nexport const batchToSpaceNDConfig: KernelConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'wasm',\n  kernelFunc: batchToSpaceND as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  const shapes = inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function concatImpl(\n    inputs: Array<{vals: BackendValues, shape: number[]}>, outShape: number[],\n    dtype: DataType, simplyConcat: boolean): TypedArray|string[] {\n  const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n\n  if (simplyConcat && dtype !== 'string') {\n    // Use built-in TypedArray.set() method for speed.\n    let offset = 0;\n    inputs.forEach(input => {\n      const size = util.sizeFromShape(input.shape);\n\n      (outVals as TypedArray).set(input.vals as TypedArray, offset);\n      offset += size;\n    });\n  } else {\n    let colOffset = 0;\n\n    inputs.forEach(input => {\n      const decodedData = dtype === 'string' ?\n          backend_util.fromUint8ToStringArray(input.vals as Uint8Array[]) :\n          input.vals as TypedArray;\n\n      let tIdx = 0;\n\n      for (let row = 0; row < input.shape[0]; ++row) {\n        const resIdx = row * outShape[1] + colOffset;\n        for (let col = 0; col < input.shape[1]; ++col) {\n          outVals[resIdx + col] = decodedData[tIdx++];\n        }\n      }\n\n      colOffset += input.shape[1];\n    });\n  }\n\n  return outVals;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Cosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const coshConfig: KernelConfig = createUnaryKernelConfig(Cosh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as unknown as\n                          keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumprod, CumprodAttrs, CumprodInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumprod: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumprod = backend.wasm.cwrap(Cumprod, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumprod(\n  args: {inputs: CumprodInputs, backend: BackendWasm, attrs: CumprodAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumprod does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumprod', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumprod(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n              permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumprodConfig: KernelConfig = {\n  kernelName: Cumprod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumprod as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const eluConfig: KernelConfig = createUnaryKernelConfig(Elu);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp, 'float32');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value, dtype}, backend} = args;\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  // Throw error when any index is out of bound.\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.readSync(indices.dataId) as TypedArray;\n  const axisDim = x.shape[parsedAxis];\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(\n        index <= axisDim - 1 && index >= 0,\n        () =>\n            `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsNan, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const isNaNConfig: KernelConfig = createUnaryKernelConfig(IsNan, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // leakyrelu_alpha\n    'number',  // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // According to TF API, LeakyRelu returns float32 when input is either float32\n  // or int32.\n  const out = backend.makeOutput(x.shape, 'float32');\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, CppDType[x.dtype], alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LogicalNot} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const logicalNotConfig: KernelConfig =\n  createUnaryKernelConfig(LogicalNot);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalOr} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalOrConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalOr, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalXor} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalXorConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalXor, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Max, MaxAttrs, MaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMax: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  // TF API supports int32 input. CPU and WebGL backend also support int32\n  // input. WASM backend doesn't support it because it uses xnnpack which only\n  // supports float32.\n  //\n  // Add the following assert only for the WASM backend instead of at core op\n  // level.\n  //\n  // TODO: add support for int32 input.\n  util.assert(\n      x.dtype === 'float32',\n      () =>\n          `Error in MaxPool: only float32 input is supported. Got ${x.dtype}.`);\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMin: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\n// Must match enum in MirrorPad.cc\nenum MirrorPaddingMode {\n  reflect = 0,\n  symmetric = 1\n}\n\nlet wasmMirrorPad: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // mode\n    'number',  // outId\n  ]);\n}\n\nfunction mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: BackendWasm,\n  attrs: MirrorPadAttrs\n}) {\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmMirrorPad(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {dtype, depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {fill} from './Fill';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    return fill({\n      backend,\n      attrs: {shape: outShape, value: constantValue, dtype: x.dtype}\n    });\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outTensorData = backend.dataIdMap.get(out.dataId);\n  const outId = outTensorData.id;\n\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  let inputId = xId;\n  const input = x;\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(inputId, weightsId, outId);\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataTypeMap, util} from '@tensorflow/tfjs-core';\n\nexport function rangeImpl(\n    start: number, stop: number, step: number,\n    dtype: 'float32'|'int32'): DataTypeMap['float32' | 'int32'] {\n  const sameStartStop = start === stop;\n  const increasingRangeNegativeStep = start < stop && step < 0;\n  const decreasingRangePositiveStep = stop < start && step > 1;\n\n  if (sameStartStop || increasingRangeNegativeStep ||\n      decreasingRangePositiveStep) {\n    return util.makeZerosTypedArray(0, dtype);\n  }\n\n  const numElements = Math.abs(Math.ceil((stop - start) / step));\n  const values = util.makeZerosTypedArray(numElements, dtype);\n\n  if (stop < start && step === 1) {\n    // Auto adjust the step's sign if it hasn't been set\n    // (or was set to 1)\n    step = -1;\n  }\n\n  values[0] = start;\n  for (let i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n  return values;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Reciprocal} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reciprocalConfig: KernelConfig =\n    createUnaryKernelConfig(Reciprocal);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {\n  KernelConfig,\n  KernelFunc,\n  ResizeNearestNeighbor,\n  ResizeNearestNeighborAttrs,\n  ResizeNearestNeighborInputs,\n  TensorInfo,\n  util,\n} from '@tensorflow/tfjs-core';\n\nimport { BackendWasm } from '../backend_wasm';\n\nimport { cast } from './Cast';\n\nlet wasmResizeNearestNeighbor: (\n  xId: number,\n  batch: number,\n  oldHeight: number,\n  oldWidth: number,\n  numChannels: number,\n  newHeight: number,\n  newWidth: number,\n  alignCorners: number,\n  halfPixelCenters: number,\n  outId: number\n) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeNearestNeighbor = backend.wasm.cwrap(\n    ResizeNearestNeighbor,\n    null /*void*/,\n    [\n      'number', // xId\n      'number', // batch\n      'number', // oldHeight\n      'number', // oldWidth\n      'number', // numChannels\n      'number', // newHeight\n      'number', // newWidth\n      'number', // alignCorners\n      'number', // halfPixelCenters\n      'number', // outId\n    ]\n  );\n}\n\nfunction resizeNearestNeighbor(args: {\n  backend: BackendWasm;\n  inputs: ResizeNearestNeighborInputs;\n  attrs: ResizeNearestNeighborAttrs;\n}): TensorInfo {\n  const { backend, inputs, attrs } = args;\n  const { images } = inputs;\n  const { alignCorners, halfPixelCenters, size } = attrs;\n\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: { x: images },\n      attrs: { dtype: 'float32' },\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const xId = xData.id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeNearestNeighbor(\n    xId,\n    batch,\n    oldHeight,\n    oldWidth,\n    numChannels,\n    newHeight,\n    newWidth,\n    alignCorners ? 1 : 0,\n    halfPixelCenters ? 1 : 0,\n    outId\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeNearestNeighborConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighbor as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ReshapeAttrs, ReshapeInputs, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, TransposeAttrs, TransposeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {padV2Config} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nfunction spaceToBatchND(args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: BackendWasm,\n  attrs: SpaceToBatchNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  const prod = util.sizeFromShape(blockShape);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...(paddings as Array<[number, number]>));\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  }) as TensorInfo;\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapeInputs: ReshapeInputs = {x: paddedX};\n  const reshapeAttrs: ReshapeAttrs = {shape: reshapedPaddedShape};\n  const paddedXReshaped =\n      reshape({inputs: reshapeInputs, backend, attrs: reshapeAttrs});\n\n  const transposeInputs: TransposeInputs = {x: paddedXReshaped};\n  const transposeAttrs:\n      TransposeAttrs = {perm: permutedReshapedPaddedPermutation};\n  const paddedXT =\n      transpose({inputs: transposeInputs, backend, attrs: transposeAttrs});\n\n  const resultReshapeInputs: ReshapeInputs = {x: paddedXT};\n  const resultReshapeAttrs: ReshapeAttrs = {shape: flattenShape};\n  const result = reshape(\n      {inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs});\n\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n\n  return result;\n}\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseFillEmptyRows, SparseFillEmptyRowsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\nimport {CppDType} from './types';\n\nlet wasmSparseFillEmptyRows: (\n    indicesId: number, valuesId: number, valuesDType: number,\n    indicesCount: number, denseRows: number, rank: number,\n    defaultValueId: number, outputIndicesId: number, outputValuesId: number,\n    emptyRowIndicatorId: number, reverseIndexMapId: number,\n    exceptionValuesId: number) => number;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseFillEmptyRows =\n      backend.wasm.cwrap('SparseFillEmptyRows', 'number', [\n        'number',  // indicesId\n        'number',  // valuesId\n        'number',  // valuesDType\n        'number',  // indicesCount\n        'number',  // denseRows\n        'number',  // rank\n        'number',  // defaultValueId\n        'number',  // outputIndicesId\n        'number',  // outputValuesId\n        'number',  // emptyRowIndicatorId\n        'number',  // reverseIndexMapId\n        'number',  // exceptionValuesId\n      ]);\n}\n\nexport function sparseFillEmptyRows(args: {\n  backend: BackendWasm,\n  inputs: SparseFillEmptyRowsInputs,\n}): [TensorInfo, TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {indices, values, denseShape, defaultValue} = inputs;\n\n  const indicesCount = indices.shape[0];\n  const rank = indices.shape[1];\n  const denseRows = backend.readSync(denseShape.dataId)[0] as number;\n\n  // Set output size to maximum possible and resize later (actual result\n  // might be smaller).\n  const maxOutputIndicesShape = [indicesCount + denseRows, rank];\n\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const valuesId = backend.dataIdMap.get(values.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n\n  const outputIndices =\n      backend.makeOutput(maxOutputIndicesShape, indices.dtype);\n  const outputIndicesId = backend.dataIdMap.get(outputIndices.dataId).id;\n\n  const outputValues =\n      backend.makeOutput(maxOutputIndicesShape.slice(0, 1), values.dtype);\n  const outputValuesId = backend.dataIdMap.get(outputValues.dataId).id;\n\n  const emptyRowIndicator = backend.makeOutput([denseRows], 'bool');\n  const emptyRowIndicatorId =\n      backend.dataIdMap.get(emptyRowIndicator.dataId).id;\n\n  const reverseIndexMap = backend.makeOutput([indicesCount], indices.dtype);\n  const reverseIndexMapId = backend.dataIdMap.get(reverseIndexMap.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  const outputRows = wasmSparseFillEmptyRows(\n      indicesId, valuesId, CppDType[values.dtype], indicesCount, denseRows,\n      rank, defaultValueId, outputIndicesId, outputValuesId,\n      emptyRowIndicatorId, reverseIndexMapId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(\n              exceptionValuesArray[1]);\n      break;\n    }\n    case 2: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n    backend.disposeData(emptyRowIndicator.dataId);\n    backend.disposeData(reverseIndexMap.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  let resizedIndices = outputIndices;\n  let resizedValues = outputValues;\n  // Overestimated output size.\n  if (outputRows !== maxOutputIndicesShape[0]) {\n    resizedIndices = slice({\n      inputs: {x: outputIndices},\n      attrs: {begin: 0, size: [outputRows, rank]},\n      backend\n    });\n    resizedValues = slice({\n      inputs: {x: outputValues},\n      attrs: {begin: 0, size: outputRows},\n      backend\n    });\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n  }\n\n  return [resizedIndices, resizedValues, emptyRowIndicator, reverseIndexMap];\n}\n\nexport const sparseFillEmptyRowsConfig: KernelConfig = {\n  kernelName: SparseFillEmptyRows,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseFillEmptyRows as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseReshape, SparseReshapeInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSparseReshape: (\n    inputIndicesId: number, inputShapeId: number, newShapeId: number,\n    nnz: number, newIndicesId: number, outputShapeId: number,\n    exceptionValuesId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSparseReshape = backend.wasm.cwrap(SparseReshape, null /*void*/, [\n    'number',  // inputIndicesId\n    'number',  // inputShapeId\n    'number',  // newShapeId\n    'number',  // nnz\n    'number',  // newIndicesId\n    'number',  // outputShapeId\n    'number',  // exceptionValuesId\n  ]);\n}\n\nfunction sparseReshape(args: {\n  backend: BackendWasm,\n  inputs: SparseReshapeInputs,\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {inputIndices, inputShape, newShape} = inputs;\n\n  if (inputIndices.shape.length !== 2) {\n    throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n  }\n  if (inputShape.shape.length !== 1) {\n    throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n  }\n  if (newShape.shape.length !== 1) {\n    throw new Error(\n        `Target shape should be a vector but received shape ${newShape.shape}`);\n  }\n\n  const inputIndicesId = backend.dataIdMap.get(inputIndices.dataId).id;\n  const inputShapeId = backend.dataIdMap.get(inputShape.dataId).id;\n  const newShapeId = backend.dataIdMap.get(newShape.dataId).id;\n\n  const nnz = inputIndices.shape[0];\n  const outputRank = util.sizeFromShape(newShape.shape);\n\n  const newIndices = backend.makeOutput([nnz, outputRank], inputIndices.dtype);\n  const newIndicesId = backend.dataIdMap.get(newIndices.dataId).id;\n\n  const outputShape = backend.makeOutput([outputRank], newShape.dtype);\n  const outputShapeId = backend.dataIdMap.get(outputShape.dataId).id;\n\n  const exceptionValues = backend.makeOutput([3], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseReshape(\n      inputIndicesId, inputShapeId, newShapeId, nnz, newIndicesId,\n      outputShapeId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseReshapeNegativeOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();\n      break;\n    case 3: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMultipleErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    case 4: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMismatchErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(newIndices.dataId);\n    backend.disposeData(outputShape.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return [newIndices, outputShape];\n}\n\nexport const sparseReshapeConfig: KernelConfig = {\n  kernelName: SparseReshape,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseReshape as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, SparseSegmentMeanInputs, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmSparseSegmentReduction: (\n    dataId: number, dtype: number, numRow: number, indicesId: number,\n    segmentIdsId: number, outputId: number, exceptionValuesId: number,\n    isMean: boolean, defaultValue: number) => void;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseSegmentReduction =\n      backend.wasm.cwrap('SparseSegmentReduction', null /*void*/, [\n        'number',  // dataId\n        'number',  // dtype\n        'number',  // numRow\n        'number',  // indicesId\n        'number',  // segmentIdsId\n        'number',  // outputId\n        'number',  // exceptionValuesId,\n        'number',  // isMean\n        'number',  // defaultValue\n      ]);\n}\n\nexport function sparseSegmentReduction(\n    args: {\n      backend: BackendWasm,\n      inputs: SparseSegmentSumInputs|SparseSegmentMeanInputs,\n    },\n    isMean: boolean): TensorInfo {\n  const {backend, inputs} = args;\n  const {data, indices, segmentIds} = inputs;\n\n  const numIndices = indices.shape[0];\n  const segmentIdsBack =\n      (backend.readSync(segmentIds.dataId, numIndices - 1, numIndices) as\n       Int32Array)[0];\n  const lastSegmentIdPlusOne = numIndices > 0 ? segmentIdsBack + 1 : 0;\n  const outputRows = lastSegmentIdPlusOne;\n\n  if (outputRows < 0) {\n    throw (new Error(\n        backend_util\n            .getSparseSegmentReductionNegativeSegmentIdsErrorMessage()));\n  }\n\n  const outputShape = data.shape.slice();\n  outputShape[0] = outputRows;\n\n  const dataId = backend.dataIdMap.get(data.dataId).id;\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const segmentIdsId = backend.dataIdMap.get(segmentIds.dataId).id;\n\n  const output = backend.makeOutput(outputShape, data.dtype);\n  const outputId = backend.dataIdMap.get(output.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseSegmentReduction(\n      dataId, CppDType[data.dtype], data.shape[0], indicesId, segmentIdsId,\n      outputId, exceptionValuesId, isMean, 0);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNegativeSegmentIdsErrorMessage();\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(output.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentMean, SparseSegmentMeanInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentMean(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentMeanInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, true);\n}\n\nexport const sparseSegmentMeanConfig: KernelConfig = {\n  kernelName: SparseSegmentMean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentMean as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentSum, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentSum(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentSumInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, false);\n}\n\nexport const sparseSegmentSumConfig: KernelConfig = {\n  kernelName: SparseSegmentSum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentSum as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmStep: (xId: number, alpha: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, slice_util, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n\n  const {\n    finalShapeSparse,\n    finalShape,\n    isIdentity,\n    sliceDim0,\n    isSimpleSlice,\n    begin: $begin,\n    end: $end,\n    strides: $strides\n  } =\n      slice_util.sliceInfo(\n          x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask);\n\n  let result;\n\n  if (isIdentity) {\n    // Optimization #1, slice is a no-op plus reshape\n    result = reshape({inputs: {x}, backend, attrs: {shape: finalShape}});\n  } else if (sliceDim0 || isSimpleSlice) {\n    // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n    util.assert(\n        x.shape.length >= 1,\n        () => `Input must have rank at least 1, got: ${x.shape.length}`);\n\n    const size = slice_util.computeOutShape($begin, $end, $strides);\n    // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n    const sliced = slice({inputs: {x}, backend, attrs: {begin: $begin, size}});\n    result =\n        reshape({inputs: {x: sliced}, backend, attrs: {shape: finalShape}});\n    backend.disposeData(sliced.dataId);\n  } else {\n    const out = backend.makeOutput(finalShapeSparse, 'float32');\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array($begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array($end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array($strides).buffer);\n\n    const outputShapeBytes =\n        new Uint8Array(new Int32Array(finalShapeSparse).buffer);\n    const outStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(finalShapeSparse)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, x.shape.length, beginBytes, endBytes, stridesBytes,\n        outputShapeBytes, outStridesBytes, finalShapeSparse.length, outId);\n\n    result = reshape({inputs: {x: out}, backend, attrs: {shape: finalShape}});\n\n    backend.disposeData(out.dataId);\n  }\n\n  return result;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringNGrams, StringNGramsAttrs, StringNGramsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringNGramsImplCPU} from '../kernel_utils/shared';\n\nfunction stringNGrams(args: {\n  backend: BackendWasm,\n  inputs: StringNGramsInputs,\n  attrs: StringNGramsAttrs\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {data, dataSplits} = inputs;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences,\n  } = attrs;\n\n  const $data = backend.readSync(data.dataId) as Uint8Array[];\n  const $dataSplits = backend.readSync(dataSplits.dataId) as Int32Array;\n\n  const [nGrams, nGramsSplits] = stringNGramsImplCPU(\n      $data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth,\n      preserveShortSequences);\n\n  const nGramsOut = backend.makeOutput([nGrams.length], 'string');\n  const nGramsOutData = backend.dataIdMap.get(nGramsOut.dataId);\n  nGramsOutData.stringBytes = nGrams;\n\n  const nGramsSplitsOut = backend.makeOutput(dataSplits.shape, 'int32');\n  const nGramsSplitsOutVals = backend.typedArrayFromHeap(nGramsSplitsOut);\n  nGramsSplitsOutVals.set(nGramsSplits);\n\n  return [nGramsOut, nGramsSplitsOut];\n}\n\nexport const stringNGramsConfig: KernelConfig = {\n  kernelName: StringNGrams,\n  backendName: 'wasm',\n  kernelFunc: stringNGrams as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringSplit, StringSplitAttrs, StringSplitInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringSplitImplCPU} from '../kernel_utils/shared';\n\nfunction stringSplit(args: {\n  backend: BackendWasm,\n  inputs: StringSplitInputs,\n  attrs: StringSplitAttrs\n}): [TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {input, delimiter} = inputs;\n  const {skipEmpty} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n  const delimiterVals = backend.readSync(delimiter.dataId) as Uint8Array[];\n\n  const [indices, values, shape] =\n      stringSplitImplCPU(inputVals, delimiterVals[0], skipEmpty);\n  const outputSize = values.length;\n\n  const indicesOut = backend.makeOutput([outputSize, 2], 'int32');\n  const indicesOutVals = backend.typedArrayFromHeap(indicesOut);\n  indicesOutVals.set(indices);\n\n  const valuesOut = backend.makeOutput([outputSize], 'string');\n  const valuesOutData = backend.dataIdMap.get(valuesOut.dataId);\n  valuesOutData.stringBytes = values;\n\n  const shapeOut = backend.makeOutput([2], 'int32');\n  const shapeOutVals = backend.typedArrayFromHeap(shapeOut);\n  shapeOutVals.set(shape);\n\n  return [indicesOut, valuesOut, shapeOut];\n}\n\nexport const stringSplitConfig: KernelConfig = {\n  kernelName: StringSplit,\n  backendName: 'wasm',\n  kernelFunc: stringSplit as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringToHashBucketFastImplCPU} from '../kernel_utils/shared';\n\nfunction stringToHashBucketFast(args: {\n  backend: BackendWasm,\n  inputs: StringToHashBucketFastInputs,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {input} = inputs;\n  const {numBuckets} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function stringToHashBucketFastImpl(\n    input: Uint8Array[], numBuckets: number): TypedArray {\n  const output = util.getArrayFromDType('int32', input.length) as TypedArray;\n\n  for (let i = 0; i < input.length; ++i) {\n    output[i] =\n        util.fingerPrint64(input[i]).modulo(numBuckets).getLowBitsUnsigned();\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmSum: (xId: number, reduceSize: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, [\n    'number',  // input_id\n    'number',  // reduce_size\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmTransform: (\n    imageId: number, transformsId: number, isBatchTransform: boolean,\n    batch: number, outHeight: number, outWidth: number, numChannels: number,\n    imageWidth: number, imageHeight: number, inputStrides: Uint8Array,\n    inputStridesLength: number, outputStrides: Uint8Array,\n    outputStridesLength: number, interpolationModeId: number,\n    fillModeId: number, fillValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n    'number',  // imageId\n    'number',  // transformsId\n    'bool',    // isBatchTransform\n    'number',  // batch\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // numChannels\n    'number',  // imageWidth\n    'number',  // imageHeight\n    'array',   // inputStrides\n    'number',  // inputStridesLength\n    'array',   // outputStrides\n    'number',  // outputStridesLength\n    'number',  // interpolationModeId\n    'number',  // fillModeId\n    'number',  // fillValue\n    'number'   // outId\n  ]);\n}\n\nfunction transform(\n    args:\n        {backend: BackendWasm, inputs: TransformInputs, attrs: TransformAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape =\n      [batch, outHeight, outWidth,\n       numChannels] as [number, number, number, number];\n  const inputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n\n  const outputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n    case 'reflect':\n      fillModeId = 2;\n      break;\n    case 'wrap':\n      fillModeId = 3;\n      break;\n    case 'nearest':\n      fillModeId = 4;\n      break;\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  wasmTransform(\n      imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight,\n      outWidth, numChannels, imageWidth, imageHeight, inputStrides,\n      image.shape.length - 1, outputStrides, outShape.length - 1,\n      interpolationModeId, fillModeId, fillValue, outId);\n\n  return out;\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumprodConfig} from './kernels/Cumprod';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {eluConfig} from './kernels/Elu';\nimport {equalConfig} from './kernels/Equal';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {isNaNConfig} from './kernels/IsNan';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {logConfig} from './kernels/Log';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {logicalNotConfig} from './kernels/LogicalNot';\nimport {logicalOrConfig} from './kernels/LogicalOr';\nimport {logicalXorConfig} from './kernels/LogicalXor';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reciprocalConfig} from './kernels/Reciprocal';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {resizeNearestNeighborConfig} from './kernels/ResizeNearestNeighbor';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {sinConfig} from './kernels/Sin';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {stringNGramsConfig} from './kernels/StringNGrams';\nimport {stringSplitConfig} from './kernels/StringSplit';\nimport {stringToHashBucketFastConfig} from './kernels/StringToHashBucketFast';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  avgPoolConfig,\n  batchMatMulConfig,\n  batchToSpaceNDConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumprodConfig,\n  cumsumConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  eluConfig,\n  equalConfig,\n  expConfig,\n  expandDimsConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  isNaNConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  logConfig,\n  logicalAndConfig,\n  logicalNotConfig,\n  logicalOrConfig,\n  logicalXorConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reciprocalConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  resizeNearestNeighborConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  selectConfig,\n  sigmoidConfig,\n  sinConfig,\n  sliceConfig,\n  softmaxConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  stringNGramsConfig,\n  stringSplitConfig,\n  stringToHashBucketFastConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transformConfig,\n  transposeConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_SIMD_SUPPORT', async () => {\n  try {\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n","\nvar WasmBackendModuleThreadedSimd = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!=\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};let nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(!ENVIRONMENT_IS_NODE){read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance==\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var defaultPrint=console.log.bind(console);var defaultPrintErr=console.warn.bind(console);if(ENVIRONMENT_IS_NODE){defaultPrint=str=>fs.writeSync(1,str+\"\\n\");defaultPrintErr=str=>fs.writeSync(2,str+\"\\n\")}var out=Module[\"print\"]||defaultPrint;var err=Module[\"printErr\"]||defaultPrintErr;Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer?heapOrArray.slice(idx,endPtr):heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){err(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;registerTLSInit(Module[\"asm\"][\"_emscripten_tls_init\"]);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiationResult(result){receiveInstance(result[\"instance\"],result[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function killThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0}function cancelThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];assert(worker);PThread.returnWorkerToPool(worker)}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);PThread.pthreads[threadParams.pthread_ptr]=worker;worker.pthread_ptr=threadParams.pthread_ptr;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"pthread_ptr\":threadParams.pthread_ptr};worker.runPthread=()=>{if(ENVIRONMENT_IS_NODE){worker.ref()}worker.postMessage(msg,threadParams.transferList);delete worker.runPthread};if(worker.loaded){worker.runPthread()}return 0}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _proc_exit(code){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,code);EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw\"unwind\"}else{}}_proc_exit(status)}var _exit=exitJS;function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){if(ENVIRONMENT_IS_PTHREAD){PThread.initWorker()}else{PThread.initMainThread()}},initMainThread:function(){var pthreadPoolSize=8;while(pthreadPoolSize--){PThread.allocateUnusedWorker()}},initWorker:function(){noExitRuntime=false},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var worker of Object.values(PThread.pthreads)){PThread.returnWorkerToPool(worker)}for(var worker of PThread.unusedWorkers){worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){var pthread_ptr=worker.pthread_ptr;delete PThread.pthreads[pthread_ptr];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0;if(ENVIRONMENT_IS_NODE){worker.unref()}__emscripten_thread_free_data(pthread_ptr)},receiveObjectTransfer:function(data){},threadInitTLS:function(){PThread.tlsInitFunctions.forEach(f=>f())},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=e=>{var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread_ptr)PThread.currentProxiedOperationCallerThread=worker.pthread_ptr;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var targetWorker=PThread.pthreads[d.targetThread];if(targetWorker){targetWorker.postMessage(d,d[\"transferList\"])}else{err('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processProxyingQueue\"){executeNotifiedProxyingQueue(d[\"queue\"])}else if(cmd===\"spawnThread\"){spawnThread(d)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(ENVIRONMENT_IS_NODE){worker.unref()}if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread()}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(d.target===\"setimmediate\"){worker.postMessage(d)}else if(cmd===\"callHandler\"){Module[d[\"handler\"]](...d[\"args\"])}else if(cmd){err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=e=>{var message=\"worker sent an error!\";err(message+\" \"+e.filename+\":\"+e.lineno+\": \"+e.message);throw e};if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(e){worker.onerror(e)});worker.on(\"detachedExit\",function(){})}var handlers=[];var knownHandlers=[\"onExit\",\"onAbort\",\"print\",\"printErr\"];for(var handler of knownHandlers){if(Module.hasOwnProperty(handler)){handlers.push(handler)}}worker.postMessage({\"cmd\":\"load\",\"handlers\":handlers,\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var worker;var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");worker=new Worker(pthreadMainJs);PThread.unusedWorkers.push(worker)},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};Module[\"PThread\"]=PThread;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+52>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+56>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){var result=getWasmTableEntry(ptr)(arg);if(keepRuntimeAlive()){PThread.setExitStatus(result)}else{__emscripten_thread_exit(result)}}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function registerTLSInit(tlsInitFunc){PThread.tlsInitFunctions.push(tlsInitFunc)}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInitTLS()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({\"cmd\":\"cleanupThread\",\"thread\":thread})}function pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,pthread_ptr,attr,startRoutine,arg);return ___pthread_create_js(pthread_ptr,attr,startRoutine,arg)}function ___pthread_create_js(pthread_ptr,attr,startRoutine,arg){if(typeof SharedArrayBuffer==\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg)}if(error)return error;var threadParams={startRoutine:startRoutine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}function __emscripten_default_pthread_stack_size(){return 65536}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function executeNotifiedProxyingQueue(queue){Atomics.store(GROWABLE_HEAP_I32(),queue>>2,1);if(_pthread_self()){__emscripten_proxy_execute_task_queue(queue)}Atomics.compareExchange(GROWABLE_HEAP_I32(),queue>>2,1,0)}Module[\"executeNotifiedProxyingQueue\"]=executeNotifiedProxyingQueue;function __emscripten_notify_task_queue(targetThreadId,currThreadId,mainThreadId,queue){if(targetThreadId==currThreadId){setTimeout(()=>executeNotifiedProxyingQueue(queue))}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processProxyingQueue\",\"queue\":queue})}else{var worker=PThread.pthreads[targetThreadId];if(!worker){return}worker.postMessage({\"cmd\":\"processProxyingQueue\",\"queue\":queue})}return 1}function __emscripten_set_offscreencanvas_size(target,width,height){return-1}function _abort(){abort(\"\")}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text=\"warning: \"+text;err(text)}}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")}function _emscripten_date_now(){return Date.now()}function getHeapMax(){return 2147483648}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else _emscripten_get_now=()=>performance.timeOrigin+performance.now();function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(()=>{var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _emscripten_unwind_to_js_event_loop(){throw\"unwind\"}function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd);return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,offset_low,offset_high,whence,newOffset);return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_U32()[iov>>2];var len=GROWABLE_HEAP_U32()[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_U32()[pnum>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}PThread.init();var proxiedFunctionTable=[null,_proc_exit,exitOnMainThread,pthreadCreateProxied,_fd_close,_fd_seek,_fd_write];var asmLibraryArg={\"__emscripten_init_main_thread_js\":___emscripten_init_main_thread_js,\"__emscripten_thread_cleanup\":___emscripten_thread_cleanup,\"__pthread_create_js\":___pthread_create_js,\"_emscripten_default_pthread_stack_size\":__emscripten_default_pthread_stack_size,\"_emscripten_get_now_is_monotonic\":__emscripten_get_now_is_monotonic,\"_emscripten_notify_task_queue\":__emscripten_notify_task_queue,\"_emscripten_set_offscreencanvas_size\":__emscripten_set_offscreencanvas_size,\"abort\":_abort,\"emscripten_check_blocking_allowed\":_emscripten_check_blocking_allowed,\"emscripten_date_now\":_emscripten_date_now,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_get_now\":_emscripten_get_now,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_num_logical_cores\":_emscripten_num_logical_cores,\"emscripten_receive_on_main_thread_js\":_emscripten_receive_on_main_thread_js,\"emscripten_resize_heap\":_emscripten_resize_heap,\"emscripten_unwind_to_js_event_loop\":_emscripten_unwind_to_js_event_loop,\"exit\":_exit,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"memory\":wasmMemory||Module[\"wasmMemory\"]};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _IsNan=Module[\"_IsNan\"]=function(){return(_IsNan=Module[\"_IsNan\"]=Module[\"asm\"][\"IsNan\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Reciprocal=Module[\"_Reciprocal\"]=function(){return(_Reciprocal=Module[\"_Reciprocal\"]=Module[\"asm\"][\"Reciprocal\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var __emscripten_tls_init=Module[\"__emscripten_tls_init\"]=function(){return(__emscripten_tls_init=Module[\"__emscripten_tls_init\"]=Module[\"asm\"][\"_emscripten_tls_init\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"pthread_self\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"_emscripten_thread_init\"]).apply(null,arguments)};var __emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=function(){return(__emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=Module[\"asm\"][\"_emscripten_thread_crashed\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=function(){return(_emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=Module[\"asm\"][\"emscripten_main_browser_thread_id\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"emscripten_run_in_main_runtime_thread_js\"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=function(){return(_emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=Module[\"asm\"][\"emscripten_dispatch_to_thread_\"]).apply(null,arguments)};var __emscripten_proxy_execute_task_queue=Module[\"__emscripten_proxy_execute_task_queue\"]=function(){return(__emscripten_proxy_execute_task_queue=Module[\"__emscripten_proxy_execute_task_queue\"]=Module[\"asm\"][\"_emscripten_proxy_execute_task_queue\"]).apply(null,arguments)};var __emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=function(){return(__emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=Module[\"asm\"][\"_emscripten_thread_free_data\"]).apply(null,arguments)};var __emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=function(){return(__emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=Module[\"asm\"][\"_emscripten_thread_exit\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"keepRuntimeAlive\"]=keepRuntimeAlive;Module[\"wasmMemory\"]=wasmMemory;Module[\"cwrap\"]=cwrap;Module[\"ExitStatus\"]=ExitStatus;Module[\"PThread\"]=PThread;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();startWorker(Module);return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","module.exports.wasmWorkerContents = `\"use strict\";var Module={};var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\");var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",data=>onmessage({data:data}));var fs=require(\"fs\");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,\"utf8\")+\"//# sourceURL=\"+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+\"\\n\");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;self.alert=threadAlert;Module[\"instantiateWasm\"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);receiveInstance(instance);Module[\"wasmModule\"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({\"cmd\":\"loaded\"})};self.onmessage=e=>{try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:\"callHandler\",handler:handler,args:[...arguments]})}}Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob==\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd===\"run\"){Module[\"__emscripten_thread_init\"](e.data.pthread_ptr,0,0,1);Module[\"establishStackSpace\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module[\"executeNotifiedProxyingQueue\"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"keepRuntimeAlive\"]()){}else{Module[\"__emscripten_thread_exit\"](ex.status)}}else{throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"__emscripten_thread_exit\"](-1)}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processProxyingQueue\"){if(initializedJS){Module[\"executeNotifiedProxyingQueue\"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){if(Module[\"__emscripten_thread_crashed\"]){Module[\"__emscripten_thread_crashed\"]()}throw ex}};`;","\nvar WasmBackendModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!=\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function _abort(){abort(\"\")}function getHeapMax(){return 2147483648}function _emscripten_get_heap_max(){return getHeapMax()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _fd_close(fd){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var asmLibraryArg={\"abort\":_abort,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _IsNan=Module[\"_IsNan\"]=function(){return(_IsNan=Module[\"_IsNan\"]=Module[\"asm\"][\"IsNan\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Reciprocal=Module[\"_Reciprocal\"]=function(){return(_Reciprocal=Module[\"_Reciprocal\"]=Module[\"asm\"][\"Reciprocal\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\nimport  * as wasmFactoryThreadedSimd_import from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport * as wasmFactory_import from '../wasm-out/tfjs-backend-wasm.js';\n\n// This workaround is required for importing in Node.js without using\n// the node bundle (for testing). This would not be necessary if we\n// flipped esModuleInterop to true, but we likely can't do that since\n// google3 does not use it.\nconst wasmFactoryThreadedSimd = (wasmFactoryThreadedSimd_import.default\n  || wasmFactoryThreadedSimd_import) as\ntypeof wasmFactoryThreadedSimd_import.default;\nconst wasmFactory = (wasmFactory_import.default\n  || wasmFactory_import) as typeof wasmFactory_import.default;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule|BackendWasmThreadedSimdModule) {\n    super();\n    this.wasm.tfjs.initWithThreadsCount(threadsCount);\n    actualThreadsCount = this.wasm.tfjs.getThreadsCount();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  override write(values: backend_util.BackendValues, shape: number[],\n      dtype: DataType): DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  override numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  override async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  override move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  override async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  override readSync(dataId: DataId, start?: number, end?: number):\n      backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      // Slice all elements.\n      if ((start == null || start === 0) &&\n          (end == null || end >= stringBytes.length)) {\n        return stringBytes;\n      }\n      return stringBytes.slice(start, end);\n    }\n    start = start || 0;\n    end = end || util.sizeFromShape(shape);\n    const bytesPerElement = util.bytesPerElement(dtype);\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset + start * bytesPerElement,\n        memoryOffset + end * bytesPerElement);\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  override disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  override refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  override incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  override floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  override dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n\n  override memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // this will be replace by rollup plugin patchWechatWebAssembly in\n  // minprogram's output.\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        // Escape '\\n' because Blob will turn it into a newline.\n        // There should be a setting for this, but 'endings: \"native\"' does\n        // not seem to work.\n        const response = (wasmWorkerContents as string).replace(/\\n/g, '\\\\n');\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The `wasm` promise will resolve to the WASM module created by\n    // the factory, but it might have had errors during creation. Most\n    // errors are caught by the onAbort callback defined above.\n    // However, some errors, such as those occurring from a\n    // failed fetch, result in this promise being rejected. These are\n    // caught and re-rejected below.\n    wasm.then((module) => {\n      initialized = true;\n      initAborted = false;\n\n      const voidReturnType: string = null;\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\n      module.tfjs = {\n        init: module.cwrap('init', null, []),\n        initWithThreadsCount:\n            module.cwrap('init_with_threads_count', null, ['number']),\n        getThreadsCount: module.cwrap('get_threads_count', 'number', []),\n        registerTensor: module.cwrap(\n            'register_tensor', null,\n            [\n              'number',  // id\n              'number',  // size\n              'number',  // memoryOffset\n            ]),\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n        dispose: module.cwrap('dispose', voidReturnType, []),\n      };\n\n      resolve({wasm: module});\n    }).catch(reject);\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n\nlet threadsCount = -1;\nlet actualThreadsCount = -1;\n\n/**\n * Sets the number of threads that will be used by XNNPACK to create\n * threadpool (default to the number of logical CPU cores).\n *\n * This must be called before calling `tf.setBackend('wasm')`.\n */\nexport function setThreadsCount(numThreads: number) {\n  threadsCount = numThreads;\n}\n\n/**\n * Gets the actual threads count that is used by XNNPACK.\n *\n * It is set after the backend is intialized.\n */\nexport function getThreadsCount(): number {\n  if (actualThreadsCount === -1) {\n    throw new Error(`WASM backend not initialized.`);\n  }\n  return actualThreadsCount;\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '4.2.0';\nexport {version};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, getThreadsCount, setThreadsCount, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","_fusedMatMulConfig","kernelName","_FusedMatMul","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","leakyreluAlpha","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDims","broadcast_util","assertAndGetBroadcastShape","slice","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","outType","wasmFunc","x","xId","util","sizeFromShape","absConfig","Abs","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","backend_util","addConfig","Add","addNConfig","AddN","inputIds","map","inputIdsBytes","identity","tensor","readSync","inVals","typedArrayFromHeap","set","identityConfig","Identity","wasmTranspose","transpose","reducedShape","perm","newPerm","i","push","minValIdx","j","removeOneSizeDims","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","transposeConfig","Transpose","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","wasmAll","allConfig","All","keepDims","inputId","input","inputRank","assertAxesAreInnerMostDims","reduceShape","computeOutAndReduceShapes","reduceSize","disposeData","expandShapeToKeepDim","wasmAny","anyConfig","Any","argMaxConfig","ArgMax","transposedId","outerSize","innerSize","wasmAvgPool","avgPoolConfig","AvgPool","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","reshape","xSize","$shape","inferFromImplicitShape","assert","incRef","reshapeConfig","Reshape","wasmBatchMatMul","batchMatMulConfig","BatchMatMul","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","concat","b3dShape","a3d","b3d","a3dId","b3dId","batchDim","Math","max","sliceImpl","vals","begin","size","isContinous","slice_util","isSliceContinous","xStrides","computeStrides","flatOffset","computeFlatOffset","subarray","decodedData","fromUint8ToStringArray","inBuf","outBuf","outLoc","indexToLoc","inLoc","idx","fromStringArrayToUint8","values","RowPartitionType","StringNGramsOp","constructor","separator","nGramWidths","leftPad","rightPad","padWidth","preserveShortSequences","this","encodeString","preserveShort","getPadWidth","nGramWidth","min","getNumNGrams","createNGrams","data","splitIndex","output","outputStartIndex","numNGrams","nGramIndex","leftPadding","rightPadding","numTokens","dataStartIndex","nGramSize","n","nGram","nextNGramIndex","appendToNGram","str","forEach","value","compute","splits","inputDataSize","splitsSize","prevSplit","validSplits","numBatchItems","nGramsSplits","getArrayFromDType","empty","nGrams","outputStartIdx","dataLength","split","delimiters","skipEmpty","result","delimiter","f","indexOf","token","tokenStart","begin_","size_","parseSliceParams","xVals","outData","stringBytes","res","sliceImplCPU","outVals","rank","xStride","outOffset","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","sliceConfig","Slice","batchToSpaceNDConfig","BatchToSpaceND","blockShape","crops","prod","reduce","reshaped","getReshaped","permuted","getPermuted","reshapedPermuted","getReshapedPermuted","sliceBeginCoords","getSliceBeginCoords","sliceSize","getSliceSize","xReshaped","cast","castConfig","Cast","ceilConfig","Ceil","wasmClip","clipByValueConfig","ClipByValue","clipValueMin","clipValueMax","shapes","t","assertParamsConsistent","$inputs","filter","inputs2D","inputsValShapes","simplyConcat","offset","colOffset","tIdx","row","resIdx","col","concatImplCPU","finalOutShape","sumInnerDims","innerDims","innerDim","inOffset","concatConfig","Concat","wasmConv2d","conv2DConfig","Conv2D","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","wasmConv2DBackpropInput","conv2DBackpropInputConfig","Conv2DBackpropInput","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","isChannelsLast","dxStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","Cos","coshConfig","Cosh","InterpolationMethod","wasmCropAndResize","cropAndResizeConfig","CropAndResize","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","wasmCumprod","cumprodConfig","Cumprod","exclusive","reverse","permutation","permutedX","permutedAxis","permutedOut","finalDim","permutedXId","permutedOutId","getUndoAxesPermutation","wasmCumsum","cumsumConfig","Cumsum","wasmDepthToSpace","depthToSpaceConfig","DepthToSpace","blockSize","outputHeight","outputWidth","outputDepth","outputShape","xStridesBytes","outputShapeBytes","outStridesBytes","wasmDepthwiseConv2d","depthwiseConv2dNativeConfig","DepthwiseConv2dNative","$dilations","eluConfig","Elu","equalConfig","Equal","expConfig","Exp","expandDims","dim","$dim","splice","expandDimsConfig","ExpandDims","fill","fillConfig","Fill","wasmFlipLeftRight","flipLeftRightConfig","FlipLeftRight","imageId","batch","imageHeight","imageWidth","numChannels","floorConfig","Floor","floorDivConfig","FloorDiv","wasmBatchNorm","fusedBatchNormConfig","FusedBatchNorm","varianceEpsilon","mean","variance","scale","meanId","varianceId","offsetId","scaleId","wasmFusedConv2d","fusedConv2DConfig","FusedConv2D","wasmFusedDepthwiseConv2d","fusedDepthwiseConv2DConfig","FusedDepthwiseConv2D","wasmGatherNd","gatherNdConfig","GatherNd","params","indices","resultShape","numSlices","gather_util","prepareAndValidate","indicesShape","sliceRank","indicesId","stridesBytes","wasmGather","gatherV2Config","GatherV2","parsedAxis","indicesVals","axisDim","index","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","dimSize","indicesSize","flattenIndex","flattenOutputShape","stridesSize","greaterConfig","Greater","greaterEqualConfig","GreaterEqual","isNaNConfig","IsNan","leakyReluConfig","LeakyRelu","alpha","lessConfig","Less","lessEqualConfig","LessEqual","logConfig","Log","logicalAndConfig","LogicalAnd","logicalNotConfig","LogicalNot","logicalOrConfig","LogicalOr","logicalXorConfig","LogicalXor","wasmMax","maxConfig","Max","reductionIndices","maximumConfig","Maximum","wasmMaxPool","maxPoolConfig","MaxPool","wasmMean","meanConfig","Mean","reductionAxes","castedInput","wasmMin","minConfig","Min","minimumConfig","Minimum","MirrorPaddingMode","wasmMirrorPad","mirrorPadConfig","MirrorPad","paddings","mode","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","multiplyConfig","Multiply","negConfig","Neg","parseResultStruct","resOffset","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","nonMaxSuppressionV3Config","NonMaxSuppressionV3","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","nonMaxSuppressionV4Config","NonMaxSuppressionV4","padToMaxOutputSize","nonMaxSuppressionV5Config","NonMaxSuppressionV5","softNmsSigma","notEqualConfig","NotEqual","wasmOneHot","oneHotConfig","OneHot","depth","onValue","offValue","onesLikeConfig","OnesLike","packConfig","Pack","assertShapesMatch","intermediateTensorInfos","expandedT","wasmPadV2","padV2Config","PadV2","constantValue","powConfig","Pow","wasmPrelu","preluConfig","Prelu","weightsId","wasmProd","prodConfig","Prod","rangeConfig","Range","start","stop","step","makeZerosTypedArray","numElements","abs","ceil","rangeImplCPU","realDivConfig","RealDiv","reciprocalConfig","Reciprocal","reluConfig","Relu","relu6Config","Relu6","wasmResizeBilinear","resizeBilinearConfig","ResizeBilinear","images","alignCorners","halfPixelCenters","newHeight","newWidth","oldHeight","oldWidth","xData","wasmResizeNearestNeighbor","resizeNearestNeighborConfig","ResizeNearestNeighbor","wasmReverse","reverseConfig","Reverse","dims","axesBytes","outShapeBytes","wasmRotate","rotateWithOffsetConfig","RotateWithOffset","radians","fillValue","center","centerX","centerY","getImageCenter","fillValues","fillBytes","roundConfig","Round","rsqrtConfig","Rsqrt","wasmScatterNd","scatterNdConfig","ScatterNd","updates","numUpdates","outputSize","scatter_util","calculateShapes","updatesId","wasmSelect","selectConfig","Select","condition","e","conditionId","tId","eId","cRank","tRank","sigmoidConfig","Sigmoid","sinConfig","Sin","softmaxConfig","Softmax","logits","spaceToBatchNDConfig","SpaceToBatchND","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","flattenShape","paddedXReshaped","paddedXT","wasmSparseFillEmptyRows","sparseFillEmptyRowsConfig","SparseFillEmptyRows","denseShape","defaultValue","indicesCount","denseRows","maxOutputIndicesShape","valuesId","defaultValueId","outputIndices","outputIndicesId","outputValues","outputValuesId","emptyRowIndicator","emptyRowIndicatorId","reverseIndexMap","reverseIndexMapId","exceptionValues","exceptionValuesId","outputRows","exceptionValuesArray","exceptionMessage","getSparseFillEmptyRowsIndicesDenseShapeMismatch","getSparseFillEmptyRowsNegativeIndexErrorMessage","getSparseFillEmptyRowsOutOfRangeIndexErrorMessage","resizedIndices","resizedValues","wasmSparseReshape","sparseReshapeConfig","SparseReshape","inputIndices","inputIndicesId","inputShapeId","newShapeId","nnz","outputRank","newIndices","newIndicesId","outputShapeId","getSparseReshapeMultipleNegativeOneOutputDimErrorMessage","getSparseReshapeNegativeOutputDimErrorMessage","getSparseReshapeEmptyTensorZeroOutputDimErrorMessage","inputShapeValues","from","outputShapeValues","getSparseReshapeInputOutputMultipleErrorMessage","getSparseReshapeInputOutputMismatchErrorMessage","wasmSparseSegmentReduction","setup","sparseSegmentReduction","isMean","segmentIds","numIndices","segmentIdsBack","getSparseSegmentReductionNegativeSegmentIdsErrorMessage","segmentIdsId","outputId","getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage","getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage","getSparseSegmentReductionIndicesOutOfRangeErrorMessage","sparseSegmentMeanConfig","SparseSegmentMean","sparseSegmentSumConfig","SparseSegmentSum","splitVConfig","SplitV","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","sqrtConfig","Sqrt","squareConfig","Square","squaredDifferenceConfig","SquaredDifference","wasmStep","stepConfig","Step","wasmStridedSlice","stridedSliceConfig","StridedSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","finalShapeSparse","finalShape","isIdentity","sliceDim0","isSimpleSlice","$begin","$end","$strides","sliceInfo","sliced","beginBytes","endBytes","stringNGramsConfig","StringNGrams","dataSplits","$data","$dataSplits","stringNGramsImplCPU","nGramsOut","nGramsSplitsOut","stringSplitConfig","StringSplit","inputVals","delimiterVals","tokens","maxNumEntries","prevTokensLength","nEntries","c","stringSplitImplCPU","indicesOut","valuesOut","shapeOut","stringToHashBucketFastConfig","StringToHashBucketFast","numBuckets","fingerPrint64","modulo","getLowBitsUnsigned","stringToHashBucketFastImplCPU","subConfig","Sub","wasmSum","sumConfig","Sum","tanConfig","Tan","tanhConfig","Tanh","wasmTile","wasmTopK","wasmTransform","kernelConfigs","Tile","reps","newShapeBytes","TopK","sorted","outValues","outValuesId","outIndices","outIndicesId","Transform","transforms","interpolation","fillMode","inputStrides","outputStrides","transformsId","interpolationModeId","fillModeId","Unpack","numOutputs","outIndex","outs","ZerosLike","kernelConfig","registerKernel","ENV","env","registerFlag","async","WebAssembly","validate","MessageChannel","port1","postMessage","SharedArrayBuffer","_scriptDir","WasmBackendModuleThreadedSimd","document","currentScript","src","undefined","__filename","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","beforeListeners","Module","Promise","resolve","reject","process","listeners","uncaughtException","unhandledRejection","read_","readAsync","readBinary","moduleOverrides","Object","assign","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","versions","node","ENVIRONMENT_IS_PTHREAD","scriptDirectory","locateFile","path","fs","require$$0","nodePath","require$$1","nodeWorkerThreads","dirname","__dirname","filename","binary","isFileURI","URL","normalize","readFileSync","ret","onload","onerror","readFile","err","replace","ex","ExitStatus","reason","keepRuntimeAlive","require$$2","console","error","global","Worker","self","location","href","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","performance","require$$3","defaultPrint","log","bind","defaultPrintErr","warn","writeSync","wasmBinary","wasmModule","noExitRuntime","abort","EXITSTATUS","ABORT","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","byteLength","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","initRuntime","callRuntimeCallbacks","wasmBinaryFile","runDependencies","dependenciesFulfilled","what","RuntimeError","isDataURI","startsWith","getBinary","file","ASM_CONSTS","name","message","cleanupThread","pthread_ptr","text","worker","PThread","pthreads","returnWorkerToPool","spawnThread","threadParams","getNewWorker","runningWorkers","msg","cmd","start_routine","startRoutine","arg","runPthread","ref","transferList","loaded","_proc_exit","code","_emscripten_proxy_to_main_thread_js","terminateAllThreads","_exit","implicit","exitOnMainThread","unusedWorkers","tlsInitFunctions","init","initWorker","initMainThread","pthreadPoolSize","allocateUnusedWorker","setExitStatus","terminate","unref","__emscripten_thread_free_data","receiveObjectTransfer","threadInitTLS","loadWasmModuleToWorker","onFinishedLoading","onmessage","d","currentProxiedOperationCallerThread","_pthread_self","targetWorker","targetThread","executeNotifiedProxyingQueue","killThread","alert","target","lineno","on","handlers","handler","hasOwnProperty","urlOrBlob","pthreadMainJs","pop","callbacks","shift","returnCode","handleException","stackTop","stackSize","_emscripten_stack_set_limits","stackRestore","_emscripten_get_now","wasmTableMirror","pthreadCreateProxied","attr","___pthread_create_js","queue","Atomics","store","__emscripten_proxy_execute_task_queue","compareExchange","warnOnce","shown","withStackSave","stack","stackSave","sync","numCallArgs","arguments","outerArgs","serializedNumCallArgs","stackAlloc","_emscripten_run_in_main_runtime_thread_js","ptr","funcPtr","func","__emscripten_thread_exit","timeOrigin","now","_emscripten_receive_on_main_thread_js_callArgs","emscripten_realloc_buffer","grow","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","printCharBuffers","printChar","stream","curr","_fd_write","iov","iovcnt","pnum","num","len","getCFunc","ident","ccall","returnType","argTypes","opts","toC","string","outPtr","maxBytesToWrite","heap","outIdx","u","charCodeAt","stringToUTF8Array","stringToUTF8","array","arr","writeArrayToMemory","convertReturnValue","Boolean","cArgs","converter","apply","onDone","proxiedFunctionTable","asmLibraryArg","__emscripten_init_main_thread_js","tb","__emscripten_thread_init","__emscripten_thread_cleanup","thread","__pthread_create_js","_emscripten_default_pthread_stack_size","_emscripten_get_now_is_monotonic","_emscripten_notify_task_queue","targetThreadId","currThreadId","mainThreadId","setTimeout","_emscripten_set_offscreencanvas_size","width","height","emscripten_check_blocking_allowed","emscripten_date_now","Date","emscripten_get_heap_max","emscripten_get_now","emscripten_memcpy_big","dest","copyWithin","emscripten_num_logical_cores","require$$4","cpus","navigator","emscripten_receive_on_main_thread_js","emscripten_resize_heap","requestedSize","oldSize","multiple","maxHeapSize","cutDown","overGrownHeapSize","emscripten_unwind_to_js_event_loop","exit","fd_close","fd_seek","fd_write","memory","info","wasi_snapshot_preview1","receiveInstance","instance","module","tlsInitFunc","cb","exports","unshift","numWorkersToLoad","w","callback","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","then","catch","getBinaryPromise","instantiate","instantiateStreaming","createWasm","calledRun","listenersAdded","actualModule","run","startWorker","preRun","doRun","postRun","numericArgs","every","runCaller","listener","WasmBackendModule","tmpDispose","removeListener","ready","wasmFactoryThreadedSimd","wasmFactoryThreadedSimd_import.default","wasmFactoryThreadedSimd_import","wasmFactory","wasmFactory_import.default","BackendWasm","KernelBackend","super","tfjs","initWithThreadsCount","threadsCount","actualThreadsCount","getThreadsCount","DataStorage","engine","write","dataIdNextNumber","move","numDataIds","kernelMs","refCount","memoryOffset","numBytes","bytesPerElement","_malloc","registerTensor","byteOffset","typedArrayFromBuffer","force","has","delete","floatPrecision","getMemoryOffset","dispose","unreliable","getPathToWasmBinary","simdSupported","threadsSupported","wasmModuleFolder","wasmPath","wasmFileMap","all","getAsync","factoryConfig","prefix","endsWith","wasmWorkerContents","blob","Blob","createObjectURL","wasmPathPrefix","customFetch","instantiateWasm","imports","arrayBuffer","initialized","onAbort","initAborted","mainScriptUrlOrBlob","toString","wasmBinaryNames","setWasmPath","usePlatformFetch","deprecationWarn","setWasmPaths","prefixOrFileMap","missingPaths","join","setThreadsCount","numThreads","version","registerBackend"],"mappings":"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"}